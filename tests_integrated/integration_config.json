{
  "management": {
    "port": 8000,
    "ssl": true
  },
  "globals": {
    "headers": {
      "global-hdr1": "globalval1",
      "global-hdr2": "globalval2"
    }
  },
  "services": [
    {
      "name": "First basic service",
      "port": 8001,
      "managementRoot": "__admin",
      "endpoints": [
        {
          "path": "/",
          "method": "GET",
          "response": "static response"
        },
        {
          "path": "/parameterized1/{{intoVar}}/subval",
          "response": "intoVar capture: {{intoVar}}"
        },
        {
          "path": "/parameterized1/staticVal/subval",
          "response": "static path components have priority"
        },
        {
          "path": "/parameterized2/{{regEx 'prefix-.+'}}/subval",
          "response": "regex capture: {{request.path}}"
        },
        {
          "path": "/parameterized3/{{regEx '(.+\\.png)' 'fname'}}",
          "response": "@subdir/{{fname}}"
        },
        {
          "path": "/parameterized1/{{regEx 'prefix2-([^/]+)' 'varname'}}/subval2",
          "response": "tricky regex capture: {{varname}}"
        },
        {
          "path": "/qstr-matching1",
          "queryString": {
            "param1": "constant val",
            "param2": "{{anyValIntoVar}}",
            "param3": "{{regEx 'prefix-(.+)-suffix' 'capturedVar'}}"
          },
          "response": {
            "body": "qstr match 1: {{request.queryString.param1}} {{capturedVar}} {{anyValIntoVar}}",
            "status": "202",
            "headers": {
              "Content-Type": "application/x-my-own",
              "param2": "{{request.queryString.param2}} {{request.queryString.param3}}",
              "global-hdr1": "overridden"
            }
          }
        },
        {
          "path": "/header-matching1",
          "headers": {
            "hdr1": "constant val",
            "hdr2": "{{anyValIntoVar}}",
            "hdr3": "{{regEx 'prefix-(.+)-suffix' 'capturedVar'}}"
          },
          "response": {
            "body": "headers match 1: {{request.headers.hdr1}} {{capturedVar}}",
            "status": 201,
            "headers": {
              "Set-Cookie": [
                "name1={{request.headers.hdr2}}",
                "name2={{request.headers.hdr3}}"
              ]
            }
          }
        },
        {
          "path": "/header-matching1",
          "headers": {
            "hdr4": "another header"
          },
          "response": "alternative header"
        },
        {
          "path": "/body-jsonschema1",
          "method": "POST",
          "body": {
            "schema": {
              "type": "object",
              "properties": {
                "somekey": {}
              },
              "required": [
                "somekey"
              ]
            }
          },
          "response": "body json schema matched"
        },
        {
          "path": "/body-regex",
          "method": "POST",
          "body": {
            "text": "{{regEx '(\\d)-required-(\\d)' 'val1' 'val2'}}"
          },
          "response": "body regex matched: {{val1}} {{val2}}"
        },
        {
          "path": "/body-jsonpath-tpl",
          "method": "POST",
          "response": "body jsonpath matched: {{jsonPath request.json '$.key'}} {{jsonPath request.json '$.key2'}}"
        },
        {
          "path": "/status-template1",
          "response": {
            "status": "{{request.queryString.rc}}"
          }
        },
        {
          "path": "/insecure-configuration1",
          "response": "@/etc/hosts"
        },
        {
          "path": "/insecure-configuration2",
          "response": "@../../etc/hosts"
        },
        {
          "path": "/cors-request",
          "method": "post",
          "body": {
            "schema": "@subdir/empty_schema.json"
          },
          "response": {
            "status": 201
          }
        },
        {
          "path": "/cors-request-overridden",
          "method": "options",
          "response": {
            "status": 401
          }
        },
        {
          "path": "/multi-response-looped",
          "response": [
            "@cors.html",
            {
              "headers": {
                "content-type": "image/png"
              },
              "body": "@subdir/image.png"
            },
            "just some text"
          ]
        },
        {
          "path": "/multi-response-nonlooped",
          "multiResponsesLooped": false,
          "response": [
            "resp1",
            "resp2"
          ]
        },
        {
          "path": "/response-not-required"
        },
        {
          "path": "/dataset-inline",
          "dataset": [
            {
              "var1": "val1"
            },
            {
              "var1": "val2"
            }
          ],
          "response": "dset: {{var1}}"
        },
        {
          "path": "/dataset-fromfile",
          "datasetLooped": false,
          "dataset": "@subdir/dataset.json",
          "response": "dset: {{var1}}"
        },
        {
          "path": "/templating-random",
          "response": "{{random.int 10 20}}\n{{random.float -0.5 20.7 3}}\n{{random.alphanum 5}}\n{{random.hex 16}}\n{{random.uuid4}}\n{{random.ascii 5}}"
        },
        {
          "path": "/counter1",
          "response": [
            "variant1: {{counter 'counterName1'}} {{counter 'counterName2'}}",
            "variant2: {{counter 'counterName1'}} {{counter 'counterName3'}}"
          ]
        },
        {
          "path": "/counter2",
          "response": {
            "headers": {
              "X-Counter": "variant3: {{counter 'counterName1'}} {{counter 'counterName2'}} {{counter 'counterName3'}}"
            }
          }
        },
        {
          "path": "/counter3",
          "response": "variant3: {{counterName1}} {{counterName2}} {{counterName3}}"
        },
        {
          "path": "/undefined-templates",
          "response": {
            "headers": {
              "x-header": "also {{random.intt 10 20}} can happen"
            },
            "body": "here goes {{unknownUndefined}} var"
          }
        },
        {
          "path": "/date-tpl",
          "response": "{{date.timestamp}} {{date.timestamp -10}} {{date.timestamp 10}} {{date.ftimestamp}} {{date.ftimestamp 10 5}} {{date.date}} {{date.date '%Y-%m-%d %H:%M:%S'}} {{date.date '%Y-%m-%d %H' 86400}}"
        },
        {
          "path": "/conn-rst",
          "response": {
            "status": "RST"
          }
        },
        {
          "path": "/conn-close",
          "response": {
            "status": "FIN"
          }
        }
      ]
    },
    {
      "name": "Service with specified.host",
      "port": 8002,
      "hostname": "specified.host",
      "endpoints": [
        {
          "id": "some-endpoint-id",
          "path": "/",
          "method": "get",
          "response": {}
        }
      ]
    },
    {
      "name": "Service with no endpoints, for bare interceptors",
      "port": 8003,
      "ssl": true
    },
    {
      "name": "Service for CORS",
      "port": 8004,
      "endpoints": [
        {
          "path": "/cors2",
          "response": "@cors.html"
        }
      ]
    },
    {
      "name": "SSL with certfile",
      "port": 8005,
      "ssl": true,
      "sslCertFile": "subdir/cert.pem",
      "sslKeyFile": "subdir/key.pem",
      "endpoints": [
        {
          "path": "/"
        }
      ]
    }
  ]
}
